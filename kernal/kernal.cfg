MEMORY {
	START:        start = $5000, size = $1000, fill = no, file = "start.bin";
	#LOKERNAL:     start = $9D80, size = $0280, fill = yes, file = "lokernal.bin";
	LOKERNAL:     start = $9D80, size = $1000, fill = yes, file = "lokernal.bin";
	ICONS:        start = $BF40, size = $00C0, fill = yes, file = %O;
	KERNALHDR:    start = $C000, size = $0100, fill = yes, file = %O;
	KERNAL:       start = $C100, size = $4F00, fill = no, file = %O;

	VARS:         start = $86C0, size = $0940;
}

SEGMENTS {
	vars:               load = VARS, type = bss;

	# start: $5000-
	start:              load = START, type = ro;

	# lokernal: $9000-$9FFF
	wheels_lokernal1:   load = LOKERNAL, type = ro;
	serial1:            load = LOKERNAL, type = ro;
	wheels_lokernal2:   load = LOKERNAL, type = ro;
	files1:             load = LOKERNAL, type = ro;
	reu:                load = LOKERNAL, type = ro;
	tobasic1:           load = LOKERNAL, type = ro;

	# icons: $BF40-$BFFF
	mouseptr:           load = ICONS, type = ro;
	dlgbox2:            load = ICONS, type = ro;

	# kernal header: $c000
	header:             load = KERNALHDR, type = ro;
	wheels1:            load = KERNALHDR, type = ro;
	mainloop1:          load = KERNALHDR, type = ro;
	files2:             load = KERNALHDR, type = ro;
	wheels2:            load = KERNALHDR, type = ro;

	# ...

	# kernal jump table: $c100
	jumptab:            load = KERNAL, type = ro;

	# kernal code
	load1:              load = KERNAL, type = ro;
	bitmask:            load = KERNAL, type = ro;
	files3:             load = KERNAL, type = ro;
	mainloop3:          load = KERNAL, type = ro;
	wheels3:            load = KERNAL, type = ro;
	load1c:             load = KERNAL, type = ro;
	hw1:                load = KERNAL, type = ro;
	wheels4:            load = KERNAL, type = ro;
	init2:              load = KERNAL, type = ro;
	memory1a:           load = KERNAL, type = ro;
	init1:              load = KERNAL, type = ro;
	memory1b:           load = KERNAL, type = ro;
	misc:               load = KERNAL, type = ro;
	hw3:                load = KERNAL, type = ro;
	load2:              load = KERNAL, type = ro;
	graph2:             load = KERNAL, type = ro;
	process:            load = KERNAL, type = ro;
	sprites:            load = KERNAL, type = ro;
	math1:              load = KERNAL, type = ro;
	memory2:            load = KERNAL, type = ro;
	mouse1:             load = KERNAL, type = ro;
	panic:              load = KERNAL, type = ro;
	serial2:            load = KERNAL, type = ro;
	screensaver:        load = KERNAL, type = ro;
	patterns:           load = KERNAL, type = ro;
	fonts1:             load = KERNAL, type = ro;
	bswfont:            load = KERNAL, type = ro;
	memory3:            load = KERNAL, type = ro;
	load3:              load = KERNAL, type = ro;
	files6:             load = KERNAL, type = ro;
	load4:              load = KERNAL, type = ro;
	files7:             load = KERNAL, type = ro;
	load5:              load = KERNAL, type = ro;
	files8:             load = KERNAL, type = ro;
	fonts2:             load = KERNAL, type = ro;
	graph3:             load = KERNAL, type = ro;
	conio:              load = KERNAL, type = ro;
	math2:              load = KERNAL, type = ro;
	init4:              load = KERNAL, type = ro;
	graph4:             load = KERNAL, type = ro;
	mouse2:             load = KERNAL, type = ro;
	menu:               load = KERNAL, type = ro;
	icon1:              load = KERNAL, type = ro;
	icon2:              load = KERNAL, type = ro;
	dlgbox1:            load = KERNAL, type = ro;
	mouse4:             load = KERNAL, type = ro;
	irq:                load = KERNAL, type = ro;
	keyboard1:          load = KERNAL, type = ro;
	keyboard3:          load = KERNAL, type = ro;
	time1:              load = KERNAL, type = ro;
	keyboard2:          load = KERNAL, type = ro;
	time2:              load = KERNAL, type = ro;

# unused
	X:                  load = KERNAL, type = ro;
	mouse3:             load = KERNAL, type = ro;
	init3:              load = KERNAL, type = ro;
	mainloop2:          load = KERNAL, type = ro;
	graph1:             load = KERNAL, type = ro;
	hw2:                load = KERNAL, type = ro;
	tobasic2:           load = KERNAL, type = ro;
}
